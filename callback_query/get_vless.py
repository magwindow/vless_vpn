from aiogram import Router, F
from aiogram.types import CallbackQuery
from database.models import async_session, VlessKey
from keyboards.menu_keyboard import tariff_keyboard, main_keyboard
from vless.vless_service import add_client
from sqlalchemy import select

vless_router = Router()

INBOUND_ID = 1
FLOW = "xtls-rprx-vision"


# === –¢—Ä–∏–∞–ª –Ω–∞ 3 –¥–Ω—è ===
@vless_router.callback_query(F.data == "trial")
async def send_trial(callback: CallbackQuery):
    user_id = callback.from_user.id

    async with async_session() as session:
        existing = await session.execute(select(VlessKey).where(VlessKey.chat_id == user_id))
        if existing.scalars().first():
            await callback.message.answer("‚ùóÔ∏è–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π VLESS –∫–ª—é—á.", reply_markup=await main_keyboard())
            return

    try:
        key = await add_client(
            inbound_id=INBOUND_ID,
            total_gb=5,
            expiry_days=3,
            flow=FLOW,
            chat_id=user_id,
            user_name=callback.from_user.username
        )

        await callback.message.answer(
            f"‚úÖ –í–∞—à –ø—Ä–æ–±–Ω—ã–π VLESS –∫–ª—é—á –Ω–∞ 3 –¥–Ω—è:\n\n<code>{key.access_url}</code>\n"
            f"‚è≥ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ: {key.expires_at.strftime('%Y-%m-%d')}", reply_markup=await main_keyboard()
        )
    except Exception as e:
        await callback.message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")


# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ ===
@vless_router.callback_query(F.data.in_(["month", "three_month", "six_month", "year"]))
async def send_paid(callback: CallbackQuery):
    user_id = callback.from_user.id
    tariff = callback.data

    tariffs = {
        "month": {"gb": 100, "days": 30},
        "three_month": {"gb": 300, "days": 90},
        "six_month": {"gb": 600, "days": 180},
        "year": {"gb": 9999, "days": 365},
    }

    try:
        t = tariffs[tariff]
        key = await add_client(
            inbound_id=INBOUND_ID,
            total_gb=t["gb"],
            expiry_days=t["days"],
            flow=FLOW,
            chat_id=user_id,
            user_name=callback.from_user.username
        )

        await callback.message.answer(
            f"‚úÖ –í–∞—à VLESS –∫–ª—é—á:\n\n<code>{key.access_url}</code>\n"
            f"üìÖ –°—Ä–æ–∫: –¥–æ {key.expires_at.strftime('%Y-%m-%d')}", reply_markup=await tariff_keyboard()
        )
    except Exception as e:
        await callback.message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")


@vless_router.callback_query(F.data == "traffic")
async def show_tariffs(callback: CallbackQuery):
    keyboard = await tariff_keyboard()
    await callback.message.edit_text(
        "üí≥ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VLESS:",
        reply_markup=keyboard
    )


@vless_router.callback_query(F.data == "manual")
async def manual_vless(callback: CallbackQuery):
    await callback.message.edit_text(
        "–í—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª–µ–µ 2-—Ö –º–∏–Ω—É—Ç.\n\n"
        "<b>1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</b>\n\n"
        'üì± <a href="https://apps.apple.com/ru/app/streisand/id6450534064">–°–∫–∞—á–∞—Ç—å –Ω–∞ iOS</a>\n'
        'üì± <a href="https://play.google.com/store/apps/details?id=com.v2raytun.android">–°–∫–∞—á–∞—Ç—å –Ω–∞ Android</a>\n\n'
        "<b>2. –ü–æ–ª—É—á–∏—Ç–µ VPN –∫–ª—é—á.</b>\n\n"
        '–ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –ø–æ –∫–Ω–æ–ø–∫–µ "–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á".\n\n'
        "<b> –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ VPN –∫–ª—é—á.</b>\n\n"
        "–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–ª—é—á –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Å–∫–∞—á–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n\n"
        '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–ª—é—Å–∏–∫ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–í—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞".\n\n'
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –±–æ–ª—å—à—É—é –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ —Ü–µ–Ω—Ç—Ä–µ —ç–∫—Ä–∞–Ω–∞.",
        reply_markup=await main_keyboard()
    )

